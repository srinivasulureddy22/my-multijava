# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- none

pool:
  vmImage: ubuntu-latest
variables:
  - group: myvar  

parameters:
  - name: BUILD_MODULE1
    displayName: Build MODULE1
    type: boolean
    default: true
  - name: BUILD_MODULE2
    displayName: Build MODULE2
    type: boolean
    default: true  
jobs:
  - job: BuildArtifacts
    displayName: Build Artifacts
    steps:
      - checkout: self
        submodules: true
      
      - task: Cache@2
        displayName: Restore Maven Cache
        inputs:
          key: maven | "$(Agent.OS)"
          restoreKeys: |
            maven | "$(Agent.OS)" | dependencies
          path: $(Pipeline.Workspace)/.m2/repository
  

      # Install Java 17
      - task: JavaToolInstaller@0
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      # Download the secure settings.xml file from Azure DevOps Secure Files
      - task: DownloadSecureFile@1
        name: settingsFile
        inputs:
          secureFile: 'settings.xml'

      # Configure settings.xml path (Fixing copy command issue)
      - script: |
          echo "Using Secure settings.xml"
          if [ ! -f "$(Agent.TempDirectory)/settings.xml" ]; then
            cp "$(settingsFile.secureFilePath)" "$(Agent.TempDirectory)/settings.xml"
          fi
        displayName: 'Configure Maven settings.xml'
            
      # Install Dependencies using Maven
      - script: |
          echo "Building Dependencies"
          mvn deploy -Dmaven.repo.local=$(Pipeline.Workspace)/.m2/repository --settings $(Agent.TempDirectory)/settings.xml
        displayName: Install Dependencies   


      # Build and Check MODULE1
      - template: 'templates/maven-build.yaml'
        parameters:
          moduleName: 'module1'
          modulePath: 'module1'
          buildCondition: ${{ parameters.BUILD_MODULE1 }}
      # Build and Check MODULE2
      - template: 'templates/maven-build.yaml'
        parameters:
          moduleName: 'module2'
          modulePath: 'module2'
          buildCondition: ${{ parameters.BUILD_MODULE2 }}
    
